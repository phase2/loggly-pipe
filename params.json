{"name":"Loggly-pipe","tagline":"Pipe it some lines.  Lines go to Loggly.  Fancy.","body":"`loggly-pipe`\r\n=============\r\n\r\n![https://travis-ci.org/modcloth-labs/loggly-pipe](https://travis-ci.org/modcloth-labs/loggly-pipe.png?branch=master)\r\n\r\n* Eats lines from stdin.\r\n* Sends batches to Loggly (or compatible).\r\n* Poops unaltered lines to stdout.\r\n* Poops ``mark`` JSON to stdout.\r\n\r\nInstallation\r\n------------\r\n\r\n`loggly-pipe` is built to be executed as a standalone file, so installing\r\ndirectly from the raw github URL works great:\r\n\r\n``` bash\r\ncurl -L -o loggly-pipe https://raw.github.com/modcloth-labs/loggly-pipe/master/loggly_pipe.py\r\nchmod +x loggly-pipe\r\n```\r\n    \r\nYou can also grab it via `pip`, which will install a `loggly-pipe` executable:\r\n\r\n``` bash\r\npip install loggly_pipe\r\n```\r\n\r\nConfiguration\r\n-------------\r\n\r\nConfiguration may be given via the command line or the env.  The latest command line\r\noptions are available like one might expect:\r\n\r\n``` bash\r\nloggly-pipe --help\r\n```\r\n\r\nHere's a list of the environment variables that are used as the option defaults:\r\n\r\n* `LOGGLY_TOKEN` **REQUIRED** one of the tokens from your Loggly account\r\n* `LOGGLY_SERVER` the base server URI (default\r\n  `https://logs-01.loggly.com`)\r\n* `LOGGLY_SHIPPER_COUNT` number of shipper threads (default `1`)\r\n* `LOGGLY_TAGS` comma-delimited tags to apply to the shipped records.\r\n  This is passed directly as the last member of `PATH_INFO`, so it\r\n  should be URL-encoded if necessary.  (default `python`)\r\n* `LOGGLY_BATCH_SIZE` number of records to accumulate before shipping\r\n  over HTTP (default `100`)\r\n* `LOGGLY_MAX_LINES` exit after consuming this many lines (default `0`,\r\n  which disables)\r\n* `LOGGLY_STDIN_SLEEP_INTERVAL` interval in seconds to sleep when line\r\n  read from stdin is empty (default `0.1`)\r\n* `LOGGLY_FLUSH_INTERVAL` interval in seconds at which to flush the line\r\n  buffer so that low activity doesn't cause records to back up (default\r\n  `10.0`)\r\n* `LOGGLY_SHIP_ATTEMPTS` number of times to retry each batch over HTTP\r\n  (default `1`)\r\n* `LOGGLY_ON_ERROR` behavior when exceptions are caught, which is\r\n  usually around shipping over HTTP, and will only take effect once\r\n  `LOGGLY_SHIP_ATTEMPTS` has been reached (choices are `raise`, `ignore`;\r\n  default `raise`)\r\n* `LOGGLY_DEBUG` print some debuggy stuff if non-empty\r\n\r\nUsage\r\n-----\r\n\r\nGiven a stdin stream made of line-based JSON records, `loggly-pipe` will\r\nemit each record unaltered as well as a record with a single `_mark` key\r\nfor each batch.\r\n\r\nHere's an example of a node app that uses bunyan for logging as well as\r\nthe `bunyan` command line tool for human readability:\r\n\r\n``` bash\r\nnode server.js | loggly-pipe | bunyan\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}